{"version":3,"file":"static/js/363.cd57a454.chunk.js","mappings":"iKAqBIA,E,iBCpBJ,EAA4B,yB,SD0Db,SAASC,IACtB,MAzDF,WACE,IAAMC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAYD,EAAAA,EAAAA,QAAO,MACnBE,GAASF,EAAAA,EAAAA,QAAO,MAYtB,OAVAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAASM,QACvBD,EAAME,iBAAmBF,EAAMG,KAE/B,IAAMC,EAASP,EAAUI,QACnBI,EAAUD,EAAOE,WAAW,MAClCD,EAAQE,UAAY,OACpBF,EAAQG,SAAS,EAAG,EAAGJ,EAAOK,MAAOL,EAAOM,OAC7C,GAAE,IAEI,CAACf,EAAUE,EAAWC,EAC9B,CAyCuCa,GAAtC,eAAOhB,EAAP,KAAiBE,EAAjB,KAA4BC,EAA5B,KAEA,EAtCF,SAAoBH,EAAkBE,EAAmBC,GAgCvD,MAAO,CA/BM,WACLL,GAENmB,UAAUC,aAAaC,aAAa,CAAEd,OAAO,IAAQe,MAAK,SAACC,GAC3CrB,EAASM,QACjBgB,UAAYD,EAElBvB,EAAcuB,CACf,GACF,EAEa,WACPvB,IAELA,EAAYyB,YAAYC,SAAQ,SAACC,GAAD,OAAWA,EAAMC,MAAjB,IAChC5B,EAAc,KACf,EAEY,WACX,IAAMO,EAAQL,EAASM,QACjBG,EAASP,EAAUI,QACnBqB,EAAMxB,EAAOG,QAEHG,EAAOE,WAAW,MAC1BiB,UAAUvB,EAAO,EAAG,EAAGI,EAAOK,MAAOL,EAAOM,QAEpD,IAAMc,EAAOpB,EAAOqB,UAAU,aAC9BH,EAAII,aAAa,MAAOF,EACzB,EACY,WAAQ,EAGtB,CAK6BG,CAAWhC,EAAUE,EAAWC,GAA5D,eAAO8B,EAAP,KAAaC,EAAb,KAAoBC,EAApB,KAEA,OACE,qBAASC,UAAWC,EAApB,WACE,+BACE,kBAAOC,IAAKtC,KAEZ,mBACA,mBAAQuC,QAASN,EAAjB,6CACA,mBAAQM,QAASJ,EAAjB,2BACA,mBAAQI,QAASL,EAAjB,gDAGF,6BACE,mBAAQI,IAAKpC,KACb,mCAEA,gBAAKsC,IAAI,GAAGF,IAAKnC,KACjB,oCAIP,C","sources":["views/photo/index.tsx","webpack://media-record/./src/views/photo/index.module.scss?8fa7"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport styles from \"./index.module.scss\";\n\nfunction useDom() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const imgRef = useRef(null);\n\n  useEffect(() => {\n    const video = videoRef.current as any;\n    video.onloadedmetadata = video.play;\n\n    const canvas = canvasRef.current as any;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = \"#333\";\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  }, []);\n\n  return [videoRef, canvasRef, imgRef];\n}\n\nlet cacheStream: MediaStream | null;\n\ntype DomRef = React.MutableRefObject<any>;\nfunction useCapture(videoRef: DomRef, canvasRef: DomRef, imgRef: DomRef) {\n  const open = () => {\n    if (!!cacheStream) return;\n\n    navigator.mediaDevices.getUserMedia({ video: true }).then((stream) => {\n      const video = videoRef.current as any;\n      video.srcObject = stream;\n\n      cacheStream = stream;\n    });\n  };\n\n  const close = () => {\n    if (!cacheStream) return;\n\n    cacheStream.getTracks().forEach((track) => track.stop());\n    cacheStream = null;\n  };\n\n  const take = () => {\n    const video = videoRef.current as any;\n    const canvas = canvasRef.current as any;\n    const img = imgRef.current as any;\n\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    const data = canvas.toDataURL(\"image/png\");\n    img.setAttribute(\"src\", data);\n  };\n  const down = () => {};\n\n  return [open, close, take, down];\n}\n\nexport default function Photo() {\n  const [videoRef, canvasRef, imgRef] = useDom();\n\n  const [open, close, take] = useCapture(videoRef, canvasRef, imgRef);\n\n  return (\n    <article className={styles.container}>\n      <header>\n        <video ref={videoRef}></video>\n\n        <br />\n        <button onClick={open}>打开摄像头</button>\n        <button onClick={take}>拍照</button>\n        <button onClick={close}>关闭摄像头</button>\n      </header>\n\n      <main>\n        <canvas ref={canvasRef}></canvas>\n        <p>canvas</p>\n\n        <img alt=\"\" ref={imgRef} />\n        <p>img</p>\n      </main>\n    </article>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"photo_container__eIj+P\"};"],"names":["cacheStream","Photo","videoRef","useRef","canvasRef","imgRef","useEffect","video","current","onloadedmetadata","play","canvas","context","getContext","fillStyle","fillRect","width","height","useDom","navigator","mediaDevices","getUserMedia","then","stream","srcObject","getTracks","forEach","track","stop","img","drawImage","data","toDataURL","setAttribute","useCapture","open","close","take","className","styles","ref","onClick","alt"],"sourceRoot":""}