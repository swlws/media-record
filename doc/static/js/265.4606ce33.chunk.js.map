{"version":3,"file":"static/js/265.4606ce33.chunk.js","mappings":"uLAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,EAClD,CDES,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,uIACtB,CHG8F,EAC9F,C,IIUIC,E,iBCfJ,EAA4B,yBAA5B,EAA8D,sB,SDO9D,SAASC,EAAOC,GACd,OACE,gBAAKC,UAAWC,EAAeC,QAASH,EAAMG,QAA9C,UACE,uBAAIH,EAAMI,OAAS,eAAO,kBAG/B,CAsCD,SAASC,IACP,OAAqBC,EAAAA,EAAAA,WAAS,GAA9B,eAAOF,EAAP,KAAeG,EAAf,KACA,EArCF,WACE,OAA8BD,EAAAA,EAAAA,UAAiB,IAA/C,eAAOE,EAAP,KAAgBC,EAAhB,KAEIC,EAAiB,GA6BrB,MAAO,CAACF,EA3Bc,WACfV,EAiBHA,EAASa,QAhBTC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,IAAQC,MAAK,SAACC,GACzD,IAAMC,EAAgB,IAAIC,cAAcF,GACxCnB,EAAWoB,EACXA,EAAcE,QAAU,SAAUC,GAChCX,EAAS,EACV,EACDQ,EAAcI,gBAAkB,SAAUD,GACxCX,EAAOa,KAAKF,EAAEG,KACf,EACDN,EAAcO,OAAS,SAAUJ,GAC/BZ,EAAWC,EACZ,EAEDQ,EAAcP,OACf,GAIJ,EAEoB,WACdb,GACLA,EAAS4B,MACV,EAGF,CAIgDC,GAA/C,eAAOnB,EAAP,KAAgBoB,EAAhB,KAA+BC,EAA/B,KACA,GAA4BvB,EAAAA,EAAAA,UAAmB,IAA/C,eAAOwB,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAuB,IAAnBxB,EAAQyB,OAAZ,CAEA,IAAIC,EAAO,IAAIC,KAAK3B,EAAS,CAAE4B,KAAM,2BACjCC,EAAWC,OAAOC,IAAIC,gBAAgBN,GAE1CH,GAAU,SAAC3C,GACT,MAAM,GAAN,SAAWA,GAAX,CAAgBiD,GACjB,GAP+B,CAQjC,GAAE,CAAC7B,IAaJ,MAAO,CAACJ,EAAQ0B,EAXD,YAcjB,WACE,IAAKlB,UAAUC,eAAiBD,UAAUC,aAAaC,aAErD,OADA2B,MAAM,2GACC,EAET,OAAO,CACR,EAnBQC,MAEU,IAAXtC,EACFwB,IAEAC,IAGFtB,GAAIH,GACL,EAEF,CAUc,SAASuC,IACtB,MAAiCtC,IAAjC,eAAOD,EAAP,KAAe0B,EAAf,KAAuBc,EAAvB,KAEA,OACE,qBAAS3C,UAAWC,EAApB,WACE,2BACE,SAACH,EAAD,CAAQI,QAASyC,EAAQxC,OAAQA,OAGnC,yDAEA,4BACG0B,EAAOe,KAAI,SAACC,EAAGC,GAAJ,OACV,kBAAeC,UAAQ,EAACC,IAAKH,GAAjBC,EADF,QAMnB,C","sources":["../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/voice/index.tsx","webpack://media-record/./src/views/voice/index.module.scss?e429"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useEffect, useState } from \"react\";\nimport styles from \"./index.module.scss\";\n\ntype ButtonProps = {\n  status: boolean;\n  onClick: () => void;\n};\n\nfunction Button(props: ButtonProps) {\n  return (\n    <div className={styles.button} onClick={props.onClick}>\n      <p>{props.status ? \"开始\" : \"停止\"}</p>\n    </div>\n  );\n}\n\nlet recorder: MediaRecorder;\nfunction useRecorder(): [Blob[], () => void, () => void] {\n  const [records, setRecords] = useState<Blob[]>([]);\n\n  let chunks: Blob[] = [];\n\n  const startRecorder = () => {\n    if (!recorder) {\n      navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        recorder = mediaRecorder;\n        mediaRecorder.onstart = function (e) {\n          chunks = [];\n        };\n        mediaRecorder.ondataavailable = function (e) {\n          chunks.push(e.data);\n        };\n        mediaRecorder.onstop = function (e) {\n          setRecords(chunks);\n        };\n\n        mediaRecorder.start();\n      });\n    } else {\n      recorder.start();\n    }\n  };\n\n  const stopRecorder = () => {\n    if (!recorder) return;\n    recorder.stop();\n  };\n\n  return [records, startRecorder, stopRecorder];\n}\n\nfunction useStatus(): [boolean, string[], () => void] {\n  const [status, sv] = useState(true);\n  const [records, startRecorder, stopRecorder] = useRecorder();\n  const [voices, setVoices] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (records.length === 0) return;\n\n    var blob = new Blob(records, { type: \"audio/ogg; codecs=opus\" });\n    var audioURL = window.URL.createObjectURL(blob);\n\n    setVoices((arr) => {\n      return [...arr, audioURL];\n    });\n  }, [records]);\n\n  const toggle = () => {\n    if (!checkEnv()) return;\n\n    if (status === true) {\n      startRecorder();\n    } else {\n      stopRecorder();\n    }\n\n    sv(!status);\n  };\n  return [status, voices, toggle];\n}\n\nfunction checkEnv() {\n  if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n    alert(\"设备不支持录音，推荐使用Chrome浏览器。\");\n    return false;\n  }\n  return true;\n}\n\nexport default function Voice() {\n  const [status, voices, toggle] = useStatus();\n\n  return (\n    <article className={styles.container}>\n      <main>\n        <Button onClick={toggle} status={status} />\n      </main>\n\n      <aside>录音列表</aside>\n\n      <footer>\n        {voices.map((v, i) => (\n          <audio key={i} controls src={v}></audio>\n        ))}\n      </footer>\n    </article>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"voice_container__byIbi\",\"button\":\"voice_button__tLDgr\"};"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","recorder","Button","props","className","styles","onClick","status","useStatus","useState","sv","records","setRecords","chunks","start","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","onstart","e","ondataavailable","push","data","onstop","stop","useRecorder","startRecorder","stopRecorder","voices","setVoices","useEffect","length","blob","Blob","type","audioURL","window","URL","createObjectURL","alert","checkEnv","Voice","toggle","map","v","i","controls","src"],"sourceRoot":""}