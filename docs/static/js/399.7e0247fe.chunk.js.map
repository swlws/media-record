{"version":3,"file":"static/js/399.7e0247fe.chunk.js","mappings":"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","sources":["webpack://media-record/./src/views/video/index.module.scss?52fa","views/video/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"video_container__4aev9\",\"block-layout\":\"video_block-layout__nMBGt\"};","import { MutableRefObject, useEffect, useRef, useState } from \"react\";\nimport styles from \"./index.module.scss\";\n\nfunction streamRecorder(mediaRecorder: MediaRecorder): Promise<Blob[]> {\n  return new Promise((resolve, reject) => {\n    let chunks: Blob[] = [];\n    mediaRecorder.onstart = function (e) {\n      chunks = [];\n    };\n    mediaRecorder.ondataavailable = function (e) {\n      chunks.push(e.data);\n    };\n    mediaRecorder.onstop = function (e) {\n      resolve(chunks);\n    };\n    mediaRecorder.start();\n  });\n}\n\nfunction useRecorder(\n  videoRef: MutableRefObject<any>\n): [Blob[], () => void, () => void] {\n  const [chunks, setChunks] = useState<Blob[]>([]);\n  let cacheStream: MediaStream, recorder: MediaRecorder;\n\n  const start = () => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        cacheStream = stream;\n\n        // 新建一个recorder\n        recorder = new MediaRecorder(stream);\n\n        // 实时记录音频、视频\n        const preview = videoRef.current;\n        preview.srcObject = stream;\n        return new Promise((resolve) => (preview.onplaying = resolve));\n      })\n      .then(() => {\n        // 启动记录\n        return streamRecorder(recorder);\n      })\n      .then((chunks) => {\n        console.log(chunks);\n        setChunks(chunks);\n      });\n  };\n\n  const stop = () => {\n    // 关闭音频、视频流\n    if (!!cacheStream) {\n      cacheStream.getTracks().forEach((track) => track.stop());\n    }\n    // 关闭recorder\n    if (!!recorder) {\n      recorder.stop();\n    }\n  };\n\n  return [chunks, start, stop];\n}\n\n/**\n * video自动播放\n *\n * @returns\n */\nfunction useAutoplay() {\n  const vRef = useRef(null);\n\n  useEffect(() => {\n    const video = vRef.current as any;\n    video.onloadedmetadata = video.play;\n  }, []);\n\n  return [vRef];\n}\n\ntype RecorderProps = { upload: (chunks: Blob[]) => void };\n\n/**\n * 录制视频\n *\n * @param props\n * @returns\n */\nfunction Recorder(props: RecorderProps) {\n  const [vRef] = useAutoplay();\n\n  const [chunks, start, stop] = useRecorder(vRef);\n\n  useEffect(() => {\n    if (chunks.length === 0) return;\n\n    props.upload(chunks);\n  }, [chunks, props]);\n\n  return (\n    <article className={styles[\"block-layout\"]}>\n      <header>录制视频</header>\n      <main>\n        <video ref={vRef} src=\"\" muted></video>\n      </main>\n\n      <footer>\n        <button onClick={start}>开始录制</button>\n        <button onClick={stop}>停止录制</button>\n      </footer>\n    </article>\n  );\n}\n\n/**\n * 画中画\n *\n * @param elRef\n */\nfunction togglePictureInPicture(elRef: MutableRefObject<null>) {\n  if (document.pictureInPictureElement) {\n    document.exitPictureInPicture();\n  } else {\n    if (document.pictureInPictureEnabled) {\n      const ref = elRef.current as any;\n      ref.requestPictureInPicture();\n    }\n  }\n}\n\ntype PlayerProps = { chunks: Blob[] };\n\n/**\n * 播放已录制的视频\n *\n * @param props\n * @returns\n */\nfunction Player(props: PlayerProps) {\n  const [vRef] = useAutoplay();\n\n  const [ready, setReady] = useState(false);\n  const [url, setUrl] = useState<string>(\"\");\n\n  const [info, setInfo] = useState({ size: 0, type: \"\" });\n  useEffect(() => {\n    const flag = props.chunks.length !== 0;\n    setReady(flag);\n\n    if (flag === false) return;\n\n    let blob = new Blob(props.chunks, {\n      type: \"video/webm\",\n    });\n    setUrl(URL.createObjectURL(blob));\n\n    setInfo({\n      size: blob.size,\n      type: blob.type,\n    });\n  }, [props]);\n\n  const footerEls = () => {\n    if (ready)\n      return (\n        <footer>\n          <button onClick={() => togglePictureInPicture(vRef)}>画中画</button>\n          <button>\n            <a href={url} download=\"video.webm\">\n              下载\n            </a>\n          </button>\n\n          <p>\n            the video file {info.size} bytes of {info.type} media\n          </p>\n        </footer>\n      );\n\n    return null;\n  };\n\n  return (\n    <article className={styles[\"block-layout\"]}>\n      <header>播放视频</header>\n\n      <main>\n        <video ref={vRef} src={url} controls={ready}></video>\n      </main>\n\n      {footerEls()}\n    </article>\n  );\n}\n\nexport default function Video() {\n  const [data, setData] = useState<Blob[]>([]);\n  const setChunks = (chunks: Blob[]) => {\n    setData(chunks);\n  };\n\n  return (\n    <article className={styles.container}>\n      <Recorder upload={setChunks} />\n\n      <Player chunks={data} />\n    </article>\n  );\n}\n"],"names":["useRecorder","videoRef","cacheStream","recorder","useState","chunks","setChunks","navigator","mediaDevices","getUserMedia","video","audio","then","stream","MediaRecorder","preview","current","srcObject","Promise","resolve","onplaying","mediaRecorder","reject","onstart","e","ondataavailable","push","data","onstop","start","console","log","getTracks","forEach","track","stop","useAutoplay","vRef","useRef","useEffect","onloadedmetadata","play","Recorder","props","length","upload","className","styles","ref","src","muted","onClick","Player","ready","setReady","url","setUrl","size","type","info","setInfo","flag","blob","Blob","URL","createObjectURL","controls","elRef","document","pictureInPictureElement","exitPictureInPicture","pictureInPictureEnabled","requestPictureInPicture","href","download","Video","setData"],"sourceRoot":""}